PROBLEM   NUMBER                                                                         :                                                      1493. Longest Subarray of 1's After Deleting One Element


// Sunday, 24 August 2025


// Sliding Window 

class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int left = 0, zeros = 0, res = 0;
        
        for (int right = 0; right < nums.size(); right++) {
            if (nums[right] == 0) zeros++;
            
            while (zeros > 1) {
                if (nums[left] == 0) zeros--;
                left++;
            }
            
            res = max(res, right - left);
        }
        
        return res;
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////


// Single loop version


class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        const int n=nums.size();
        int zeros=0, ans=0;
        for(int l=0, r=0; r<n; r++){
            zeros+=(nums[r]==0);
            zeros-=(zeros>1 && nums[l++]==0);
            ans=max(ans, r-l);
        }
        return ans; 
    }
};
