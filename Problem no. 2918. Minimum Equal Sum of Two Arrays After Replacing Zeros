PROBLEM NUMBER                                               :-                                            2918. Minimum Equal Sum of Two Arrays After Replacing Zeros

// Date : 10 May 2025


// Greedy + Two Pass

class Solution 
{
public:
    long long minSum(vector<int>& nums1, vector<int>& nums2) 
    {
        long long sum1 = 0;
        long long sum2 = 0;
        int zero1 = 0;
        int zero2 = 0;

        // Step 1: Traverse nums1
        for(int i = 0; i < nums1.size(); i++) 
        {
            if(nums1[i] == 0) 
            {
                nums1[i] = 1;
                zero1++;
            }
            
            sum1 += nums1[i];
        }

        // Step 2: Traverse nums2
        for(int i = 0; i < nums2.size(); i++) 
        {
            if(nums2[i] == 0) 
            {
                nums2[i] = 1;
                zero2++;
            }
            
            sum2 += nums2[i];
        }

        // Step 3: Feasibility check
        if(sum1 < sum2 && zero1 == 0)
        {
            return -1;
        }

        if(sum2 < sum1 && zero2 == 0)
        {
            return -1;
        }

        // Step 4: Return the minimal equal sum
        return max(sum1, sum2);
    }
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////



// Greedy || O(n) || Check minSUM, can be produced by considering 0's as 1's from both array

class Solution {
public:
    long long minSum(vector<int>& nums1, vector<int>& nums2) {
        ios_base::sync_with_stdio(false);
        cin.tie(0);
        cout.tie(0);

        long long sum1 = 0, sum2 = 0;
        int zeros1 = 0, zeros2 = 0;

        for (int n : nums1) {
            if (n == 0) zeros1++;
            sum1 += n;
        }

        for (int n : nums2) {
            if (n == 0) zeros2++;
            sum2 += n;
        }

        if (zeros1 == 0 && zeros2 == 0) {
            return sum1 == sum2 ? sum1 : -1;
        } else if (zeros1 == 0) {
            return sum2 + zeros2 <= sum1 ? sum1 : -1;
        } else if (zeros2 == 0) {
            return sum1 + zeros1 <= sum2 ? sum2 : -1;
        }

        return max(sum1 + zeros1, sum2 + zeros2);
    }
};
