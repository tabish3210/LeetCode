PROBLEM  NUMBER                    :-                      2537. Count the Number of Good Subarrays


// Date : 16 Apr 2025



// Approach 1 â†’ Brute Force

class Solution {
public:
    long long countGood(vector<int>& nums, int k, long long cnt = 0) {
        for (int i = 0; i < nums.size(); i++) {
            unordered_map<int, int> mpp;
            long long pairs = 0;
            for (int left = i; left < nums.size(); left++) {
                pairs += mpp[nums[left]];
                mpp[nums[left]]++;
                if (pairs >= k) cnt++;
            }
        }
        return cnt;
    }
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 2nd 


// Sliding Window 

class Solution {
public:
    long long countGood(vector<int>& nums, int k, long long cnt = 0) {
        unordered_map <int,int> mpp;
        for (int i = 0, left = 0 ; i < nums.size() ; i++) {
            k -= mpp[nums[i]]++;
            while (k <= 0) k += --mpp[nums[left++]];
            cnt += left;
        }
        return cnt;
    }
};
