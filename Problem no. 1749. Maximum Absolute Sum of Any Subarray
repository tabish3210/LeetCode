PROBLEM NUMBER     :-      1749. Maximum Absolute Sum of Any Subarray

// Date : 26 Feb 2025

// PREFIX SUM

class Solution {
public:
    int maxAbsoluteSum(std::vector<int>& nums) {
        int prefixSum = 0;
        int minPrefixSum = 0;
        int maxPrefixSum = 0;
        int maxAbsoluteSum = 0;

        for (int i = 0; i < nums.size(); i++) {
            prefixSum += nums[i]; // Update prefix sum
            
            // Update maxAbsoluteSum
            maxAbsoluteSum = std::max(maxAbsoluteSum, std::abs(prefixSum - minPrefixSum));
            maxAbsoluteSum = std::max(maxAbsoluteSum, std::abs(prefixSum - maxPrefixSum));
            
            // Update minPrefixSum and maxPrefixSum
            minPrefixSum = std::min(minPrefixSum, prefixSum);
            maxPrefixSum = std::max(maxPrefixSum, prefixSum);
        }

        return maxAbsoluteSum;
    }
};



