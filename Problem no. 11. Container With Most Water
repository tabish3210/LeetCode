PROBLEM   NUMBER                                                                   :                                                                     11. Container With Most Water


// Saturday, 4 October 2025


// Sliding Window | Two-pointer 

class Solution {
public:
    int maxArea(vector<int>& height) {
        int i = 0;  // Left pointer at the start of the array
        int j = height.size() - 1;  // Right pointer at the end of the array
        int res = 0;  // Variable to store the maximum area found so far

        // Loop until the two pointers meet
        while (i < j) {
            // Calculate the area between the lines at i and j
            // Width is (j - i), height is the minimum of height[i] and height[j]
            res = max(res, (j - i) * min(height[i], height[j]));

            // Move the pointer pointing to the shorter line inward,
            // because moving the taller one won't help increase the area
            if (height[i] < height[j])
                i++;  // Move left pointer right
            else
                j--;  // Move right pointer left
        }

        // Return the maximum area found
        return res;
    }
};
