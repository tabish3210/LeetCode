PROBLEM  NUMBER                                                           :-                                                                1432. Max Difference You Can Get From Changing an Integer

// Date : 15 July 2025


// Gready

class Solution {
public:
    int n;

    vector<int> toDigit(int num) {
        vector<int> ans(n);
        for (int x = num, i = n - 1; x > 0; x /= 10, i--) {
            ans[i] = x % 10;
            //        cout<<int(ans[i])<<",";
        }
        return ans;
    }

    int maxDiff(int num) {
        n = 1 + log10(num);
        vector<int> digit = toDigit(num);

        // Make max
        int a = -1;
        for (int i = 0; i < n && a == -1; i++) {
            if (digit[i] != 9)
                a = digit[i];
        }

        int x = 0;
        for (int i = 0; i < n; i++) {
            if (digit[i] == a)
                x = 10 * x + 9;
            else
                x = 10 * x + digit[i];
        }

        // Make min
        int b = -1, y = 0;
        if (digit[0] != 1) {
            b = digit[0];
            for (int i = 0; i < n; i++) {
                if (digit[i] == b)
                    y = 10 * y + 1;
                else
                    y = 10 * y + digit[i];
            }
        } 
        else {
            for (int i = 1; i < n && b == -1; i++) {
                if (digit[i] != 0 && digit[i] != 1) {
                    b = digit[i];
                }
            }
            for (int i = 0; i < n; i++) {
                if (i == 0)
                    y = 10 * y + digit[i]; // preserve the leading 1
                else if (digit[i] == b)
                    y = 10 * y + 0;
                else
                    y = 10 * y + digit[i];
            }
        }

        return x - y;
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 2nd solution like 2566. Maximum Difference by Remapping a Digit


class Solution {
public:
    int n;
    static consteval array<int, 10> pow10(){
        array<int, 10> ans={1};
        for (int i=1; i<10; i++)
            ans[i]=ans[i-1]*10;
        return ans;
    }   

    int maxDiff(int num) {
        constexpr array<int, 10> tens=pow10();
        int T=*upper_bound(tens.begin(), tens.end(), num)/10;;
        int a=-1, b=-1, x=0, y=0;
        int c=num/T==1?0:1;// convert b=c look first digit==1 or not
        for( int t=T; t>=1; num%=t, t/=10){
            const int d=num/t;
            if ( a==-1&& d!=9){// for max
                a=d;
                x+=9*t;
            }
            else if (d==a) x+=9*t;
            else x+=d*t;

            if (b==-1 && d!=0 && d!=1){// for min
                b=d;
                y+=c*t;
            }
            else if (d==b) y+=c*t;
            else y+=d*t;
        }
        return x-y;
    }
};
