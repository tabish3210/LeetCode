PROBLEM NUMBER :-    2698. Find the Punishment Number of an Integer

// Date : 15 Feb 2025


//  Using ints to partition. Divide & conguer.

class Solution {
public:
    static inline bool partition(int x, int target) {
        if (x==target) return 1;
        if (x==0) return target==0; 
        const int m0=min(x, 1000); 
        [[unroll]] 
        for (int m=10; m<=m0; m*=10) {
            if (partition(x/m, target-x%m)) return 1;
        }
        return 0;
    }

    static int punishmentNumber(int n) {
        int sum=0;
        for (int i=1; i<=n; i++) {
            const int x=i*i;
            sum+=(partition(x, i))?x:0;
        }
        return sum;
    }
};

///////////////////////////////////////////////////////////////////////////////////////////

/* Method 2nd

// C++ | (Recursion + Brute Force)


class Solution {
public:
    int num;
    string s;

    bool rec(int i=0,int rem=0,int sm=0){
        if(i==s.size())
            return sm+rem==num;
     
        rem=rem*10+s[i]-'0';
        return rec(i+1,0,sm+rem)|rec(i+1,rem,sm);
    }

    int punishmentNumber(int n) {
        int ans=0;
        for(int i=1;i<=n;i++){
            num=i,s=to_string(i*i);

            ans+=rec()*i*i;
        }

        return ans;
    }
};

*/
