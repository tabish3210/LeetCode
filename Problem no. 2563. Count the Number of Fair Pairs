PROBLEM  NUMBER                                :-                             2563. Count the Number of Fair Pairs             

// Date : 19 Apr 2025


// Sorting + Two Pointers

class Solution {
public:
    long long countAtMost(vector<int>& nums, long long comp){
        long long ans = 0;
        for (int i = 0, j = nums.size() - 1; i < j; i++) {
            while(i < j && nums[i] + nums[j] > comp) --j;
            ans += j - i;
        }
        return ans;
    }

    long long countFairPairs(vector<int>& nums, int lower, int upper){
        sort(nums.begin(), nums.end());
        return countAtMost(nums, upper) - countAtMost(nums, lower - 1);
    }
};

//////////////////////////////////////////////////////////////////////////////////////////////////


//  Binary Search Implementation


class Solution {
    public:
        long long countFairPairs(vector<int>& nums, int lower, int upper) {
            long long ans = 0;
            sort(nums.begin(), nums.end());
            for (int i = 0; i + 1 < nums.size(); i++) {
                int minReq = lower - nums[i], maxReq = upper - nums[i];
                auto high = upper_bound(nums.begin() + i + 1, nums.end(), maxReq);
                auto low = lower_bound(nums.begin() + i + 1, nums.end(), minReq);
                ans += (high - low);
            }
            return ans;
        }
    };
